{
  "name": "noder",
  "description": "Node.js Simple Web Utility",
  "version": "0.0.7",
  "author": {
    "name": "Simon Su",
    "email": "simonsu.mail@gmail.com"
  },
  "contributors": [
    {
      "name": "Simon Su",
      "email": "simonsu.mail@gmail.com"
    }
  ],
  "dependencies": {
    "underscore": "*",
    "log4js": "*",
    "commander": "*"
  },
  "keywords": [
    "http",
    "server",
    "web"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/peihsinsu/noder"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.8.0"
  },
  "directories": {
    "bin": "./bin",
    "lib": "./lib"
  },
  "optionalDependencies": {},
  "_engineSupported": true,
  "_defaultsLoaded": true,
  "_from": "noder",
  "bin": {
    "nhelp": "bin/nhelp",
    "noder": "bin/noder"
  },
  "readme": "Noder - Simple HTTP Server\n========\n\n* [中文說明](README.tw.md)\n\n\nThis is a simple web server write by node.js. You can quickly start a web server for outside access through one line. It's easy way for frontend web developer to test prototype page and need not to build a apache or other web server.\n<div align=\"center\">\n<img src=\"http://peihsinsu.github.com/images/noder-intro.png\" width=\"90%\"/><br/>\nPicture: Easy to use of noder!\n</div>\n\n#Install\nInstall using npm...\n```bash\n# sudo npm install noder -g\n```\nPS: The \"sudo\" will depend on your role of this computer.\n\n#Usage\nDefault, server start at 1337 port...\n```bash\n# noder\nServer running at http://127.0.0.1:1337/\n```\n## Advance usage:\nYou can also using the parameters to control the host, port for the service listen. And the allow or deny parameters for the filter of user query.\n```bash\nnoder -h 192.168.1.205 -p 8080 -a png,html -d jpg\n```\nYou can see the help page for the parameters.\n\n## Help page:\nOpen the help page using \"noder --help\".\n```bash\n# noder --help\n\n  Usage: noder [options]\n\n  Options:\n\n    -h, --help                     output usage information\n    -V, --version                  output the version number\n    -i, --host address <ip>        Specific host, like 192.168.1.1, default is all ip listened\n    -p, --port <port>              Specific port, like 80,3000,8080, default is 1337\n    -a, --allow <allow file type>  Specific the allowed file types that seprate by \",\", default is all\n    -d, --deny <deny file type>    Specific the denied file types that seprate by \",\", default is none\n```\n\n#Open Browser\nBrowser View http://127.0.0.1:1337/test.html (Assump that the test.html exist in the current folder)\n```bash\n# noder\nServer running at http://127.0.0.1:1337/\nGot fileType:html\n<Buffer 3c 68 31 3e 48 45 4c 4c 4f 2e 2e 2e 3c 2f 68 31 3e 0a>\n```\n\n#Log level settup\nWe following the log4js to write log, see: https://github.com/nomiddlename/log4js-node.git. If you want to see more log in the program, you can try to modify the environment setting of \"LOG_LEVEL\":\nIn Linux or Mac, you can export like:\n```\nexport LOG_LEVEL=INFO\n```\nIn Windows, you can use \"set\" like:\n```\nset LOG_LEVEL=INFO\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "noder@0.0.7"
}
